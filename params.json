{
  "name": "webmagic-csdnblog",
  "tagline": "基于WebMagic写的一个csdn博客小爬虫",
  "body": "# webmagic-csdnblog\r\n基于WebMagic写的一个csdn博客小爬虫\r\n\r\n博客地址：\r\n[http://blog.csdn.net/qq598535550/article/details/51287630](http://blog.csdn.net/qq598535550/article/details/51287630)\r\n\r\n--------\r\n\r\n最近有点无聊，想研究一下爬虫，说到爬虫，很多人第一时间想到的是python。但是这次我选择了室友推荐的java爬虫框架[WebMagic](http://webmagic.io)。该框架容易上手，可定制可扩展，非常适合想用java做爬虫的小伙伴们。先看一下[官方教程](http://webmagic.io/docs/zh/)，里面写得很详细，也有不少参考案例。\r\n\r\n-------\r\n暂时还想不到有什么数据值得爬取，先拿csdn博客来练练手。\r\n小爬虫能抓取指定用户的所有文章的关键信息，包括文章id，标题，标签，分类，阅读人数，评论人数，是否原创。并且把数据保存到数据库中。\r\n![文章ID](http://img.blog.csdn.net/20160430201323660)\r\n![文章的关键信息](http://img.blog.csdn.net/20160430200254021)\r\n\r\n-------\r\n**数据库表的设计及sql**\r\n\r\n![数据库表的设计](http://img.blog.csdn.net/20160430200621238)\r\n``` \r\nCREATE TABLE `csdnblog` (\r\n  `key` int(11) unsigned NOT NULL AUTO_INCREMENT,\r\n  `id` int(11) unsigned NOT NULL,\r\n  `title` varchar(255) NOT NULL,\r\n  `date` varchar(16) DEFAULT NULL,\r\n  `tags` varchar(255) DEFAULT NULL,\r\n  `category` varchar(255) DEFAULT NULL,\r\n  `view` int(11) unsigned DEFAULT NULL,\r\n  `comments` int(11) unsigned DEFAULT NULL,\r\n  `copyright` int(1) unsigned DEFAULT NULL,\r\n  PRIMARY KEY (`key`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;\r\n\r\n\r\n```\r\n\r\n-------\r\n**Processor是爬虫逻辑，程序的核心**\r\n\r\n``` java\r\npackage csdnblog;\r\n\r\nimport java.util.List;\r\n\r\nimport us.codecraft.webmagic.Page;\r\nimport us.codecraft.webmagic.Site;\r\nimport us.codecraft.webmagic.Spider;\r\nimport us.codecraft.webmagic.processor.PageProcessor;\r\n\r\n/**\r\n * CSDN博客爬虫\r\n * \r\n * @describe 可以爬取指定用户的csdn博客所有文章，并保存到数据库中。\r\n * @date 2016-4-30\r\n * \r\n * @author steven\r\n * @csdn qq598535550\r\n * @website lyf.soecode.com\r\n */\r\npublic class CsdnBlogPageProcessor implements PageProcessor {\r\n\r\n\tprivate static String username = \"qq598535550\";// 设置csdn用户名\r\n\tprivate static int size = 0;// 共抓取到的文章数量\r\n\r\n\t// 抓取网站的相关配置，包括：编码、抓取间隔、重试次数等\r\n\tprivate Site site = Site.me().setRetryTimes(3).setSleepTime(1000);\r\n\r\n\t@Override\r\n\tpublic Site getSite() {\r\n\t\treturn site;\r\n\t}\r\n\r\n\t@Override\r\n\t// process是定制爬虫逻辑的核心接口，在这里编写抽取逻辑\r\n\tpublic void process(Page page) {\r\n\t\t// 列表页\r\n\t\tif (!page.getUrl().regex(\"http://blog\\\\.csdn\\\\.net/\" + username + \"/article/details/\\\\d+\").match()) {\r\n\t\t\t// 添加所有文章页\r\n\t\t\tpage.addTargetRequests(page.getHtml().xpath(\"//div[@id='article_list']\").links()// 限定文章列表获取区域\r\n\t\t\t\t\t.regex(\"/\" + username + \"/article/details/\\\\d+\")\r\n\t\t\t\t\t.replace(\"/\" + username + \"/\", \"http://blog.csdn.net/\" + username + \"/\")// 巧用替换给把相对url转换成绝对url\r\n\t\t\t\t\t.all());\r\n\t\t\t// 添加其他列表页\r\n\t\t\tpage.addTargetRequests(page.getHtml().xpath(\"//div[@id='papelist']\").links()// 限定其他列表页获取区域\r\n\t\t\t\t\t.regex(\"/\" + username + \"/article/list/\\\\d+\")\r\n\t\t\t\t\t.replace(\"/\" + username + \"/\", \"http://blog.csdn.net/\" + username + \"/\")// 巧用替换给把相对url转换成绝对url\r\n\t\t\t\t\t.all());\r\n\t\t\t// 文章页\r\n\t\t} else {\r\n\t\t\tsize++;// 文章数量加1\r\n\t\t\t// 用CsdnBlog类来存抓取到的数据，方便存入数据库\r\n\t\t\tCsdnBlog csdnBlog = new CsdnBlog();\r\n\t\t\t// 设置标签（可以有多个，用,来分割）\r\n\t\t\tcsdnBlog.setTags(listToString(page.getHtml()\r\n\t\t\t\t\t.xpath(\"//div[@class='article_l']/span[@class='link_categories']/a/allText()\").all()));\r\n\t\t\t// 设置类别（可以有多个，用,来分割）\r\n\t\t\t\t\tpage.getHtml().xpath(\"//div[@class='article_title']//span[@class='link_title']/a/text()\").get());\r\n\t\t\t// 设置日期\r\n\t\t\tcsdnBlog.setDate(\r\n\t\t\t\t\tpage.getHtml().xpath(\"//div[@class='article_r']/span[@class='link_postdate']/text()\").get());\r\n\t\t\t// 设置标签组（标签可以有多个，这里用,来分割）\r\n\t\t\tcsdnBlog.setTags(listToString(page.getHtml()\r\n\t\t\t\t\t.xpath(\"//div[@class='article_l']/span[@class='link_categories']/a/allText()\").all()));\r\n\t\t\t// 设置类别\r\n\t\t\tcsdnBlog.setCategory(\r\n\t\t\t\t\tlistToString(page.getHtml().xpath(\"//div[@class='category_r']/label/span/text()\").all()));\r\n\t\t\t// 设置阅读人数\r\n\t\t\tcsdnBlog.setView(Integer.parseInt(page.getHtml().xpath(\"//div[@class='article_r']/span[@class='link_view']\")\r\n\t\t\t\t\t.regex(\"(\\\\d+)人阅读\").get()));\r\n\t\t\t// 设置评论人数\r\n\t\t\tcsdnBlog.setComments(Integer.parseInt(page.getHtml()\r\n\t\t\t\t\t.xpath(\"//div[@class='article_r']/span[@class='link_comments']\").regex(\"\\\\((\\\\d+)\\\\)\").get()));\r\n\t\t\t// 设置是否原创\r\n\t\t\tcsdnBlog.setCopyright(page.getHtml().regex(\"bog_copyright\").match() ? 1 : 0);\r\n\t\t\t// 把对象存入数据库\r\n\t\t\tnew CsdnBlogDao().add(csdnBlog);\r\n\t\t\t// 把对象输出控制台\r\n\t\t\tSystem.out.println(csdnBlog);\r\n\t\t}\r\n\t}\r\n\r\n\t// 把list转换为string，用,分割\r\n\tpublic static String listToString(List<String> stringList) {\r\n\t\tif (stringList == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tStringBuilder result = new StringBuilder();\r\n\t\tboolean flag = false;\r\n\t\tfor (String string : stringList) {\r\n\t\t\tif (flag) {\r\n\t\t\t\tresult.append(\",\");\r\n\t\t\t} else {\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t\tresult.append(string);\r\n\t\t}\r\n\t\treturn result.toString();\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tlong startTime, endTime;\r\n\t\tSystem.out.println(\"【爬虫开始】请耐心等待一大波数据到你碗里来...\");\r\n\t\tstartTime = System.currentTimeMillis();\r\n\t\t// 从用户博客首页开始抓，开启5个线程，启动爬虫\r\n\t\tSpider.create(new CsdnBlogPageProcessor()).addUrl(\"http://blog.csdn.net/\" + username).thread(5).run();\r\n\t\tendTime = System.currentTimeMillis();\r\n\t\tSystem.out.println(\"【爬虫结束】共抓取\" + size + \"篇文章，耗时约\" + ((endTime - startTime) / 1000) + \"秒，已保存到数据库，请查收！\");\r\n\t}\r\n}\r\n\r\n```\r\n----------------\r\n**CsdnBlog实体类对应数据库的表**\r\n\r\n``` java\r\npackage csdnblog;\r\n\r\npublic class CsdnBlog {\r\n\r\n\tprivate int id;// 编号\r\n\r\n\tprivate String title;// 标题\r\n\r\n\tprivate String date;// 日期\r\n\r\n\tprivate String tags;// 标签\r\n\r\n\tprivate String category;// 分类\r\n\r\n\tprivate int view;// 阅读人数\r\n\r\n\tprivate int comments;// 评论人数\r\n\r\n\tprivate int copyright;// 是否原创\r\n\r\n\tpublic int getId() {\r\n\t\treturn id;\r\n\t}\r\n\r\n\tpublic void setId(int id) {\r\n\t\tthis.id = id;\r\n\t}\r\n\r\n\tpublic String getTitle() {\r\n\t\treturn title;\r\n\t}\r\n\r\n\tpublic void setTitle(String title) {\r\n\t\tthis.title = title;\r\n\t}\r\n\r\n\tpublic String getDate() {\r\n\t\treturn date;\r\n\t}\r\n\r\n\tpublic void setDate(String date) {\r\n\t\tthis.date = date;\r\n\t}\r\n\r\n\tpublic String getTags() {\r\n\t\treturn tags;\r\n\t}\r\n\r\n\tpublic void setTags(String tags) {\r\n\t\tthis.tags = tags;\r\n\t}\r\n\r\n\tpublic String getCategory() {\r\n\t\treturn category;\r\n\t}\r\n\r\n\tpublic void setCategory(String category) {\r\n\t\tthis.category = category;\r\n\t}\r\n\r\n\tpublic int getView() {\r\n\t\treturn view;\r\n\t}\r\n\r\n\tpublic void setView(int view) {\r\n\t\tthis.view = view;\r\n\t}\r\n\r\n\tpublic int getComments() {\r\n\t\treturn comments;\r\n\t}\r\n\r\n\tpublic void setComments(int comments) {\r\n\t\tthis.comments = comments;\r\n\t}\r\n\r\n\tpublic int getCopyright() {\r\n\t\treturn copyright;\r\n\t}\r\n\r\n\tpublic void setCopyright(int copyright) {\r\n\t\tthis.copyright = copyright;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"CsdnBlog [id=\" + id + \", title=\" + title + \", date=\" + date + \", tags=\" + tags + \", category=\"\r\n\t\t\t\t+ category + \", view=\" + view + \", comments=\" + comments + \", copyright=\" + copyright + \"]\";\r\n\t}\r\n\r\n}\r\n\r\n```\r\n-----------\r\n**dao数据访问层**\r\n\r\n``` java\r\npackage csdnblog;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\n\r\npublic class CsdnBlogDao {\r\n\r\n\tprivate Connection conn = null;\r\n\tprivate Statement stmt = null;\r\n\r\n\tpublic CsdnBlogDao() {\r\n\t\ttry {\r\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\r\n\t\t\tString url = \"jdbc:mysql://localhost:3307/webmagic?user=root&password=\";\r\n\t\t\tconn = DriverManager.getConnection(url);\r\n\t\t\tstmt = conn.createStatement();\r\n\t\t} catch (ClassNotFoundException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic int add(CsdnBlog csdnBlog) {\r\n\t\ttry {\r\n\t\t\tString sql = \"INSERT INTO `webmagic`.`csdnblog` (`id`, `title`, `date`, `tags`, `category`, `view`, `comments`, `copyright`) VALUES (?, ?, ?, ?, ?, ?, ?, ?);\";\r\n\t\t\tPreparedStatement ps = conn.prepareStatement(sql);\r\n\t\t\tps.setInt(1, csdnBlog.getId());\r\n\t\t\tps.setString(2, csdnBlog.getTitle());\r\n\t\t\tps.setString(3, csdnBlog.getDate());\r\n\t\t\tps.setString(4, csdnBlog.getTags());\r\n\t\t\tps.setString(5, csdnBlog.getCategory());\r\n\t\t\tps.setInt(6, csdnBlog.getView());\r\n\t\t\tps.setInt(7, csdnBlog.getComments());\r\n\t\t\tps.setInt(8, csdnBlog.getCopyright());\r\n\t\t\treturn ps.executeUpdate();\r\n\t\t} catch (SQLException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n}\r\n\r\n```\r\n-------------\r\n大家看一下我的博客爬到的结果，有点小激动哈~大家也可以动手试试~~\r\n\r\n![控制台输出结果](http://img.blog.csdn.net/20160430201909414)\r\n\r\n![爬虫结果](http://img.blog.csdn.net/20160430201759742)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}